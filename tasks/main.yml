---
# tasks file for roles/aws_sts_assume_role

- name: Get the current caller identity facts
  aws_caller_info:
  register: aws_sts_assume_role_caller_facts

- name: Set username based on the current AWS caller facts
  set_fact:
    aws_sts_assume_role_aws_user_name: "{{ aws_sts_assume_role_caller_facts.arn.split('/')[1] }}"

- name: Set MFA account id based on the current AWS caller facts
  set_fact:
    aws_sts_assume_role_aws_mfa_account_id: "{{ aws_sts_assume_role_caller_facts.account }}"

# try and load pre-used credentials from cache
- name: "Check for {{ aws_sts_assume_role_cache_path }}{{ aws_sts_assume_role_cache_file_name }}"
  find:
      path: "{{ aws_sts_assume_role_cache_path }}"
      file_type: file
      age: "{{ aws_sts_assume_role_cache_time }}"
      age_stamp: mtime
      patterns: "{{ aws_sts_assume_role_cache_file_name }}"
  register: aws_sts_assume_role_stat_cache_file

- name: load assumed role from cache
  include_vars:
    file: "{{ aws_sts_assume_role_cache_path }}{{ aws_sts_assume_role_cache_file_name }}"
    name: aws_sts_assume_role_cached_assumed_role
  when:
      - aws_sts_assume_role_stat_cache_file.matched == 1
      - aws_sts_assume_role_stat_cache_file.files[0].size > 0

- name: set convenience vars for sts credentials
  set_fact:
      sts_aws_access_key: "{{ aws_sts_assume_role_cached_assumed_role.sts_creds.access_key }}"
      sts_aws_secret_key: "{{ aws_sts_assume_role_cached_assumed_role.sts_creds.secret_key }}"
      sts_security_token: "{{ aws_sts_assume_role_cached_assumed_role.sts_creds.session_token }}"
      sts_assumed_role_id: "{{ aws_sts_assume_role_cached_assumed_role.sts_user.assumed_role_id }}"
  when:
      - aws_sts_assume_role_cached_assumed_role is defined

# no cache so re authentate
- name: require user supplied MFA code
  pause:
    prompt: "Enter mfa code for {{ aws_sts_assume_role_aws_user_name }} to assume role: {{ aws_sts_assume_role_aws_role_session_name }}"
    echo: no
  register: aws_sts_assume_role_user_supplied_mfa_code
  when:
      - aws_sts_assume_role_cached_assumed_role is undefined
      - aws_sts_assume_role_without_mfa is undefined

- name: call aws-assume-role without MFA to get temp sts credentials
  sts_assume_role:
      role_arn: "{{ aws_sts_assume_role_switch_to_aws_role_arn }}"
      role_session_name: "{{ aws_sts_assume_role_aws_role_session_name }}"
      region: "{{ aws_region }}"
  register: aws_sts_assume_role_assumed_role_without_mfa
  when:
      - aws_sts_assume_role_cached_assumed_role is undefined
      - aws_sts_assume_role_without_mfa is defined

- name: call aws-assume-role with MFA token to get temp sts credentials
  sts_assume_role:
      mfa_serial_number: "{{ aws_sts_assume_role_mfa_serial }}"
      mfa_token: "{{ aws_sts_assume_role_user_supplied_mfa_code.user_input }}"
      role_arn: "{{ aws_sts_assume_role_switch_to_aws_role_arn }}"
      role_session_name: "{{ aws_sts_assume_role_aws_role_session_name }}"
      region: "{{ aws_region }}"
  register: aws_sts_assume_role_assumed_role_with_mfa
  when:
      - aws_sts_assume_role_cached_assumed_role is undefined
      - aws_sts_assume_role_without_mfa is undefined

# two different vars because of: https://github.com/ansible/ansible/issues/4297#issuecomment-356427588
- name: Set assumed role fact
  set_fact:
    aws_sts_assume_role_assumed_role: >-
        '{{ aws_sts_assume_role_assumed_role_without_mfa if aws_sts_assume_role_without_mfa is defined
        else aws_sts_assume_role_assumed_role_with_mfa }}'

- name: store credentials
  set_fact:
      sts_aws_access_key: "{{ aws_sts_assume_role_assumed_role.sts_creds.access_key }}"
      sts_aws_secret_key: "{{ aws_sts_assume_role_assumed_role.sts_creds.secret_key }}"
      sts_security_token: "{{ aws_sts_assume_role_assumed_role.sts_creds.session_token }}"
      sts_assumed_role_id: "{{ aws_sts_assume_role_assumed_role.sts_user.assumed_role_id }}"
  when:
      - aws_sts_assume_role_cached_assumed_role is undefined

- name: "cache aws-assume-role sts credentials to {{ aws_sts_assume_role_cache_path }}{{ aws_sts_assume_role_cache_file_name }}"
  copy:
      content: "{{ aws_sts_assume_role_assumed_role }}"
      dest: "{{ aws_sts_assume_role_cache_path }}{{ aws_sts_assume_role_cache_file_name }}"
      mode: 0600
  when:
      - aws_sts_assume_role_cached_assumed_role is undefined
      - aws_sts_assume_role_caching_enabled | bool
